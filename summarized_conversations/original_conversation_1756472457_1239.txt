{'role': 'assistant', 'content': 'Now, let\'s create a Docker setup for our production environment:\n\n<function_calls>\n<create-file file_path="prejudice_risk_calculator/production_setup/Dockerfile">\n# Use Python 3.11 slim as base image\nFROM python:3.11-slim\n\n# Set environment variables\nENV PYTHONDONTWRITEBYTECODE=1 \\\n    PYTHONUNBUFFERED=1 \\\n    PIP_NO_CACHE_DIR=off \\\n    PIP_DISABLE_PIP_VERSION_CHECK=on \\\n    FLASK_APP=app.py \\\n    FLASK_ENV=production\n\n# Set working directory\nWORKDIR /app\n\n# Install system dependencies\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    gcc \\\n    postgresql-client \\\n    libpq-dev \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Copy requirements file\nCOPY requirements.txt .\n\n# Install Python dependencies\nRUN pip install --upgrade pip && \\\n    pip install -r requirements.txt\n\n# Copy application code\nCOPY . .\n\n# Create non-root user\nRUN adduser --disabled-password --gecos \'\' appuser\nRUN chown -R appuser:appuser /app\nUSER appuser\n\n# Expose port\nEXPOSE 8000\n\n# Run gunicorn\nCMD ["gunicorn", "--bind", "0.0.0.0:8000", "--workers", "4", "--threads", "2", "app:create_app()"]\n</create-file>\n</function_calls>', 'tool_calls': None}