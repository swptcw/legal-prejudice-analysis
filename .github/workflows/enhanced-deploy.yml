name: Enhanced Deploy to VPS

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  VPS_HOST: ${{ secrets.VPS_HOST }}
  VPS_USER: ${{ secrets.VPS_USER }}
  DEPLOY_PATH: /var/www/demo/current

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup SSH using GitHub secrets
      uses: webfactory/ssh-agent@v0.8.0
      with:
        ssh-private-key: ${{ secrets.VPS_SSH_KEY }}
        
    - name: Add VPS to known hosts
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts
        
    - name: Deploy main site to VPS
      run: |
        echo "🚀 Deploying Legal Prejudice Analysis Platform..."
        
        # Deploy complete site
        rsync -avz --delete \
          --exclude='.git' \
          --exclude='.github' \
          --exclude='.gitignore' \
          --exclude='*.log' \
          ./ ${{ env.VPS_USER }}@${{ env.VPS_HOST }}:${{ env.DEPLOY_PATH }}
          
    - name: Setup Apache configuration on VPS
      run: |
        ssh ${{ env.VPS_USER }}@${{ env.VPS_HOST }} << 'ENDSSH'
          # Copy Apache configuration
          sudo cp ${{ env.DEPLOY_PATH }}/deploy/apache2-legal-prejudice.conf /etc/apache2/sites-available/demo.legal-prejudice-analysis.org.conf
          
          # Enable site
          sudo a2ensite demo.legal-prejudice-analysis.org.conf
          sudo a2dissite 000-default.conf
          
          # Reload Apache
          sudo systemctl reload apache2
        
    - name: Update permissions on VPS
      run: |
        ssh ${{ env.VPS_USER }}@${{ env.VPS_HOST }} "sudo chown -R www-data:www-data ${{ env.DEPLOY_PATH }}"
        
    - name: Create API health endpoint
      run: |
        ssh ${{ env.VPS_USER }}@${{ env.VPS_HOST }} "echo '{&quot;status&quot;:&quot;ok&quot;,&quot;timestamp&quot;:&quot;$(date -Iseconds)&quot;}' > ${{ env.DEPLOY_PATH }}/api/health"
        
    - name: Verify deployment success
      run: |
        echo "🔍 Verifying deployment..."
        curl -f http://${{ env.VPS_HOST }}/api/health || exit 1
        
    - name: Create deployment summary
      run: |
        echo "## 🚀 Legal Prejudice Analysis Platform Deployed" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Deployment Details" >> $GITHUB_STEP_SUMMARY
        echo "- **Target**: ${{ secrets.VPS_HOST }}" >> $GITHUB_STEP_SUMMARY
        echo "- **User**: ${{ secrets.VPS_USER }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Path**: ${{ env.DEPLOY_PATH }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Status**: ✅ Successfully Deployed" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### URLs" >> $GITHUB_STEP_SUMMARY
        echo "- **Demo Site**: http://${{ secrets.VPS_HOST }}" >> $GITHUB_STEP_SUMMARY
        echo "- **API Health**: http://${{ secrets.VPS_HOST }}/api/health" >> $GITHUB_STEP_SUMMARY
        echo "- **Documentation**: http://${{ secrets.VPS_HOST }}/docs/" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Timestamp" >> $GITHUB_STEP_SUMMARY
        echo "$(date -Iseconds)" >> $GITHUB_STEP_SUMMARY

  test:
    runs-on: ubuntu-latest
    needs: deploy
    
    steps:
    - name: Test deployed site
      run: |
        curl -f http://${{ secrets.VPS_HOST }}/api/health || exit 1
        curl -f http://${{ secrets.VPS_HOST }}/ | grep -q "Legal Prejudice Analysis" || exit 1
