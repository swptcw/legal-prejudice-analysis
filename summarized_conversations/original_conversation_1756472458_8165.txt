{'role': 'assistant', 'content': 'Let\'s create a docker-compose.yml file for easy deployment:\n\n<function_calls>\n<create-file file_path="prejudice_risk_calculator/production_setup/docker-compose.yml">\nversion: \'3.8\'\n\nservices:\n  api:\n    build: .\n    restart: always\n    ports:\n      - "8000:8000"\n    depends_on:\n      - db\n      - redis\n    environment:\n      - FLASK_APP=app.py\n      - FLASK_CONFIG=production\n      - DATABASE_URL=postgresql://prejudice:${DB_PASSWORD}@db:5432/prejudice_risk\n      - REDIS_URL=redis://redis:6379/0\n      - SECRET_KEY=${SECRET_KEY}\n      - JWT_SECRET_KEY=${JWT_SECRET_KEY}\n      - CORS_ORIGINS=${CORS_ORIGINS:-*}\n      - LOG_LEVEL=INFO\n      - BEHIND_PROXY=true\n      - PROXY_X_FOR=1\n      - PROXY_X_PROTO=1\n      - ENABLE_WEBHOOKS=true\n      - ENABLE_METRICS=true\n    volumes:\n      - ./logs:/app/logs\n    networks:\n      - prejudice_network\n\n  db:\n    image: postgres:14-alpine\n    restart: always\n    environment:\n      - POSTGRES_USER=prejudice\n      - POSTGRES_PASSWORD=${DB_PASSWORD}\n      - POSTGRES_DB=prejudice_risk\n    volumes:\n      - postgres_data:/var/lib/postgresql/data\n    ports:\n      - "5432:5432"\n    networks:\n      - prejudice_network\n\n  redis:\n    image: redis:7-alpine\n    restart: always\n    volumes:\n      - redis_data:/data\n    networks:\n      - prejudice_network\n\n  nginx:\n    image: nginx:1.23-alpine\n    restart: always\n    ports:\n      - "80:80"\n      - "443:443"\n    volumes:\n      - ./nginx/conf.d:/etc/nginx/conf.d\n      - ./nginx/ssl:/etc/nginx/ssl\n      - ./static:/usr/share/nginx/html\n    depends_on:\n      - api\n    networks:\n      - prejudice_network\n\nnetworks:\n  prejudice_network:\n    driver: bridge\n\nvolumes:\n  postgres_data:\n  redis_data:\n</create-file>\n</function_calls>', 'tool_calls': None}