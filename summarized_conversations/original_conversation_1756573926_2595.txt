{'role': 'assistant', 'content': '<function_calls>\n<create-file file_path="docs_new/assets/js/search.js">\n/**\n * Legal Prejudice Analysis Documentation - Search Functionality\n */\n\ndocument.addEventListener(\'DOMContentLoaded\', function() {\n    // Search functionality\n    const searchInput = document.getElementById(\'search-input\');\n    const searchButton = document.getElementById(\'search-button\');\n    const searchResults = document.getElementById(\'search-results\');\n    \n    // Search index - this would normally be generated from all documentation pages\n    // For now, we\'ll create a simple index with sample data\n    const searchIndex = [\n        {\n            title: \'Legal Prejudice Analysis Framework\',\n            url: \'framework/index.html\',\n            content: \'The foundational component that establishes definitions, standards, and methodology based on statutory provisions (28 U.S.C. §§ 455, 144) and key Supreme Court precedents.\'\n        },\n        {\n            title: \'Legal Standards for Prejudice\',\n            url: \'framework/legal-standards.html\',\n            content: \'Detailed analysis of statutory provisions including 28 U.S.C. §§ 455, 144 and their interpretation in judicial proceedings.\'\n        },\n        {\n            title: \'Key Supreme Court Precedents\',\n            url: \'framework/precedents.html\',\n            content: \'Analysis of key Supreme Court cases including Liteky v. United States and Caperton v. A.T. Massey Coal Co. that establish standards for judicial prejudice.\'\n        },\n        {\n            title: \'Evaluation Methodology\',\n            url: \'framework/methodology.html\',\n            content: \'Structured approach to evaluating potential prejudice in legal proceedings, including factor identification and assessment.\'\n        },\n        {\n            title: \'Risk Analysis Overview\',\n            url: \'risk-analysis/index.html\',\n            content: \'The quantitative component that provides methods for evaluating the likelihood and impact of prejudicial factors.\'\n        },\n        {\n            title: \'Quantitative Methods\',\n            url: \'risk-analysis/quantitative-methods.html\',\n            content: \'Statistical and mathematical approaches to quantifying prejudice risk, including likelihood ratio analysis and Monte Carlo simulations.\'\n        },\n        {\n            title: \'Probability Analysis\',\n            url: \'risk-analysis/probability.html\',\n            content: \'Bayesian probability framework for updating prejudice assessments as new evidence emerges.\'\n        },\n        {\n            title: \'Risk Matrices\',\n            url: \'risk-analysis/risk-matrices.html\',\n            content: \'Visual tools for mapping prejudice factors based on likelihood and impact, with categorization into risk levels.\'\n        },\n        {\n            title: \'Practical Implementation Guide\',\n            url: \'practical-guide/index.html\',\n            content: \'The implementation component that offers worksheets, checklists, and decision matrices for immediate application in legal practice.\'\n        },\n        {\n            title: \'48-hour Triage Protocol\',\n            url: \'practical-guide/triage-protocol.html\',\n            content: \'Step-by-step process for rapidly assessing potential prejudice within the critical 48-hour window after discovery.\'\n        },\n        {\n            title: \'Strategic Response Options\',\n            url: \'practical-guide/response-options.html\',\n            content: \'Detailed strategies for responding to different types and levels of potential prejudice, with decision frameworks.\'\n        },\n        {\n            title: \'Documentation Templates\',\n            url: \'practical-guide/templates.html\',\n            content: \'Ready-to-use templates for documenting prejudice concerns, tracking incidents, and preparing formal submissions.\'\n        },\n        {\n            title: \'Case Studies Overview\',\n            url: \'case-studies/index.html\',\n            content: \'The applied component that demonstrates the framework in action through detailed analysis of example scenarios.\'\n        },\n        {\n            title: \'Case Study 1: Relationship-Based Prejudice\',\n            url: \'case-studies/case1.html\',\n            content: \'Analysis of a case involving potential prejudice based on prior relationships between judge and litigants.\'\n        },\n        {\n            title: \'Case Study 2: Conduct-Based Prejudice\',\n            url: \'case-studies/case2.html\',\n            content: \'Examination of a case involving potential prejudice based on judicial conduct during proceedings.\'\n        },\n        {\n            title: \'Common Prejudice Patterns\',\n            url: \'case-studies/patterns.html\',\n            content: \'Identification of recurring patterns in prejudice cases and effective response strategies.\'\n        },\n        {\n            title: \'API Documentation\',\n            url: \'api/index.html\',\n            content: \'Overview of the Legal Prejudice Analysis API for integrating the framework into software systems.\'\n        },\n        {\n            title: \'Authentication\',\n            url: \'api/authentication.html\',\n            content: \'Methods for authenticating with the API, including API keys and OAuth implementation.\'\n        },\n        {\n            title: \'API Endpoints\',\n            url: \'api/endpoints.html\',\n            content: \'Comprehensive listing of all API endpoints with request and response formats.\'\n        },\n        {\n            title: \'Webhooks\',\n            url: \'api/webhooks.html\',\n            content: \'Implementation guide for webhook integration to receive real-time notifications of prejudice assessments.\'\n        },\n        {\n            title: \'Integration Overview\',\n            url: \'integration/index.html\',\n            content: \'Guide to integrating the Legal Prejudice Analysis framework with existing legal practice systems.\'\n        },\n        {\n            title: \'Clio Integration\',\n            url: \'integration/clio.html\',\n            content: \'Step-by-step guide for integrating with the Clio case management system.\'\n        },\n        {\n            title: \'Practice Panther Integration\',\n            url: \'integration/practice-panther.html\',\n            content: \'Implementation guide for connecting with Practice Panther practice management software.\'\n        },\n        {\n            title: \'Custom Integrations\',\n            url: \'integration/custom.html\',\n            content: \'Framework for developing custom integrations with proprietary or specialized legal software.\'\n        }\n    ];\n    \n    // Function to perform search\n    function performSearch(query) {\n        // Clear previous results\n        searchResults.innerHTML = \'\';\n        \n        if (!query.trim()) {\n            searchResults.style.display = \'none\';\n            return;\n        }\n        \n        // Convert query to lowercase for case-insensitive matching\n        const lowerQuery = query.toLowerCase();\n        \n        // Filter search index\n        const results = searchIndex.filter(item => {\n            return (\n                item.title.toLowerCase().includes(lowerQuery) ||\n                item.content.toLowerCase().includes(lowerQuery)\n            );\n        });\n        \n        // Display results\n        if (results.length > 0) {\n            results.forEach(result => {\n                const resultItem = document.createElement(\'div\');\n                resultItem.className = \'search-result-item\';\n                \n                const resultLink = document.createElement(\'a\');\n                resultLink.href = result.url;\n                resultLink.innerHTML = `<strong>${result.title}</strong>`;\n                \n                const resultContent = document.createElement(\'p\');\n                \n                // Create a snippet with highlighted query\n                let snippet = result.content;\n                if (snippet.length > 150) {\n                    // Find the position of the query in the content\n                    const queryPosition = result.content.toLowerCase().indexOf(lowerQuery);\n                    \n                    // Create a snippet around the query\n                    const startPos = Math.max(0, queryPosition - 60);\n                    const endPos = Math.min(result.content.length, queryPosition + 90);\n                    \n                    snippet = \'...\' + result.content.substring(startPos, endPos) + \'...\';\n                }\n                \n                // Highlight the query in the snippet\n                const highlightedSnippet = snippet.replace(\n                    new RegExp(query, \'gi\'),\n                    match => `<mark>${match}</mark>`\n                );\n                \n                resultContent.innerHTML = highlightedSnippet;\n                \n                resultItem.appendChild(resultLink);\n                resultItem.appendChild(resultContent);\n                searchResults.appendChild(resultItem);\n            });\n            \n            searchResults.style.display = \'block\';\n        } else {\n            const noResults = document.createElement(\'div\');\n            noResults.className = \'search-result-item\';\n            noResults.textContent = \'No results found.\';\n            searchResults.appendChild(noResults);\n            searchResults.style.display = \'block\';\n        }\n    }\n    \n    // Search input event handler\n    if (searchInput) {\n        searchInput.addEventListener(\'input\', function() {\n            performSearch(this.value);\n        });\n        \n        // Handle Enter key\n        searchInput.addEventListener(\'keypress\', function(e) {\n            if (e.key === \'Enter\') {\n                e.preventDefault();\n                performSearch(this.value);\n            }\n        });\n    }\n    \n    // Search button event handler\n    if (searchButton) {\n        searchButton.addEventListener(\'click\', function() {\n            performSearch(searchInput.value);\n        });\n    }\n    \n    // Close search results when clicking outside\n    document.addEventListener(\'click\', function(event) {\n        const isClickInsideSearch = searchInput.contains(event.target) || \n                                   searchButton.contains(event.target) || \n                                   searchResults.contains(event.target);\n        \n        if (!isClickInsideSearch && searchResults.style.display === \'block\') {\n            searchResults.style.display = \'none\';\n        }\n    });\n    \n    // Initialize search if URL has search parameter\n    const urlParams = new URLSearchParams(window.location.search);\n    const searchQuery = urlParams.get(\'search\');\n    \n    if (searchQuery && searchInput) {\n        searchInput.value = searchQuery;\n        performSearch(searchQuery);\n    }\n});\n</create-file>\n</function_calls>', 'tool_calls': None}