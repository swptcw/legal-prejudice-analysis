{'role': 'assistant', 'content': 'Now, let\'s create the Nginx configuration file:\n\n<function_calls>\n<create-file file_path="prejudice_risk_calculator/production_setup/nginx/conf.d/default.conf">\n# Nginx configuration for Legal Prejudice Risk Calculator API\n\n# Rate limiting zone\nlimit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;\n\n# Upstream API servers\nupstream api_servers {\n    server api:8000;\n}\n\n# HTTP server - redirect to HTTPS\nserver {\n    listen 80;\n    server_name api.prejudicerisk.example.com;\n    \n    # Redirect all HTTP requests to HTTPS\n    location / {\n        return 301 https://$host$request_uri;\n    }\n    \n    # Let\'s Encrypt challenge response\n    location /.well-known/acme-challenge/ {\n        root /usr/share/nginx/html;\n    }\n}\n\n# HTTPS server\nserver {\n    listen 443 ssl http2;\n    server_name api.prejudicerisk.example.com;\n    \n    # SSL configuration\n    ssl_certificate /etc/nginx/ssl/server.crt;\n    ssl_certificate_key /etc/nginx/ssl/server.key;\n    ssl_protocols TLSv1.2 TLSv1.3;\n    ssl_prefer_server_ciphers on;\n    ssl_ciphers \'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256\';\n    ssl_session_timeout 1d;\n    ssl_session_cache shared:SSL:10m;\n    ssl_session_tickets off;\n    \n    # HSTS (comment out if testing)\n    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;\n    \n    # Other security headers\n    add_header X-Content-Type-Options nosniff always;\n    add_header X-Frame-Options DENY always;\n    add_header X-XSS-Protection "1; mode=block" always;\n    add_header Content-Security-Policy "default-src \'self\'; script-src \'self\'; img-src \'self\' data:; style-src \'self\' \'unsafe-inline\'; font-src \'self\'; connect-src \'self\'" always;\n    add_header Referrer-Policy strict-origin-when-cross-origin always;\n    \n    # Logging\n    access_log /var/log/nginx/api_access.log;\n    error_log /var/log/nginx/api_error.log;\n    \n    # API proxy\n    location /api/ {\n        # Rate limiting\n        limit_req zone=api_limit burst=20 nodelay;\n        \n        # Proxy headers\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n        \n        # Proxy settings\n        proxy_pass http://api_servers;\n        proxy_buffering on;\n        proxy_buffer_size 8k;\n        proxy_buffers 8 8k;\n        \n        # Timeouts\n        proxy_connect_timeout 60s;\n        proxy_send_timeout 60s;\n        proxy_read_timeout 60s;\n        \n        # WebSocket support (if needed)\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection "upgrade";\n    }\n    \n    # Health check endpoint\n    location /health {\n        proxy_pass http://api_servers/health;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        \n        # No rate limiting for health checks\n        \n        # Cache health check responses\n        proxy_cache_valid 200 10s;\n    }\n    \n    # Static files\n    location / {\n        root /usr/share/nginx/html;\n        index index.html;\n        try_files $uri $uri/ /index.html;\n        \n        # Cache static files\n        expires 1d;\n        add_header Cache-Control "public, max-age=86400";\n    }\n    \n    # Error pages\n    error_page 404 /404.html;\n    error_page 500 502 503 504 /50x.html;\n    \n    location = /404.html {\n        root /usr/share/nginx/html;\n        internal;\n    }\n    \n    location = /50x.html {\n        root /usr/share/nginx/html;\n        internal;\n    }\n}\n</create-file>\n</function_calls>', 'tool_calls': None}